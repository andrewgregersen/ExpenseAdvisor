// Generated by data binding compiler. Do not edit!
package com.example.loginimplenetation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.loginimplenetation.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class HistoryLayoutBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout hcentre;

  @NonNull
  public final CardView hcvCardView;

  @NonNull
  public final TextView hhistoryDescription;

  @NonNull
  public final TextView hhistoryPrice;

  @NonNull
  public final TextView hhistoryTitle;

  @NonNull
  public final RelativeLayout hrlWrapper;

  protected HistoryLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout hcentre, CardView hcvCardView, TextView hhistoryDescription,
      TextView hhistoryPrice, TextView hhistoryTitle, RelativeLayout hrlWrapper) {
    super(_bindingComponent, _root, _localFieldCount);
    this.hcentre = hcentre;
    this.hcvCardView = hcvCardView;
    this.hhistoryDescription = hhistoryDescription;
    this.hhistoryPrice = hhistoryPrice;
    this.hhistoryTitle = hhistoryTitle;
    this.hrlWrapper = hrlWrapper;
  }

  @NonNull
  public static HistoryLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.history_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static HistoryLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<HistoryLayoutBinding>inflateInternal(inflater, R.layout.history_layout, root, attachToRoot, component);
  }

  @NonNull
  public static HistoryLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.history_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static HistoryLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<HistoryLayoutBinding>inflateInternal(inflater, R.layout.history_layout, null, false, component);
  }

  public static HistoryLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static HistoryLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (HistoryLayoutBinding)bind(component, view, R.layout.history_layout);
  }
}
